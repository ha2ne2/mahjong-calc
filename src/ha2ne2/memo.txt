。あかどらたいさく
 ー> コンバートじにメタ情報をつける
。あがりはいをぬく
 ー> どこかで実装している




;; シャボ待ちのアガリで刻子が出来た時の符計算が間違っていた
(def sample0208
  '{:ba 南, :kyoku 2, :ie 北, :oya false, :menzen ((m 1) (m 2) (m 3) (m 7) (m 7) (北) (北)),
    :naki (((m 6) (m 6) (m 6)) ((中) (中) (中))),
    :pon (((m 6) (m 6) (m 6)) ((中) (中) (中))), :ti- nil, :kan nil, :ankan nil, :dora ((p 3)), :ura-dora nil,
    :tumo nil, :ron (m 7), :yaku' ((1 役牌中) (2 混一色)), :hu' 30, :ten' 3900, :aux ()})

;; 平和が付いていない。オタ風が怪しい
(def sample0209
  '{:ba 東, :kyoku 3, :ie 西, :oya false,
    :menzen ((m 7) (m 8) (m 9) (p 1) (p 2) (p 3) (s 2) (s 3) (s 7) (s 8) (s 9) (南) (南)),
    :naki nil, :pon nil, :ti- nil, :kan nil, :ankan nil, :dora ((南)), :ura-dora ((s 5)),
    :tumo (s 1), :ron nil, :yaku' ((1 立直) (1 一発) (1 門前清自摸和) (1 平和) (2 混全帯幺九) (2 ドラ) (0 裏ドラ)),
    :hu' 20, :ten' 16000, :aux ((1 立直) (1 一発)),
    :figure (((m 7) (m 8) (m 9)) ((p 1) (p 2) (p 3)) ((s 1) (s 2) (s 3)) ((s 7) (s 8) (s 9)) ((南) (南)))})

;; ((comp first figure-out) (apply array-map

;; ダブリーfix
;; FAIL: 567m456p123s789s99p  (30 4000) (30 8000)
(def sample0209a
  '{:ba 南, :kyoku 3, :ie 西, :oya false,
    :menzen ((m 5) (m 6) (m 7) (p 4) (p 5) (p 6) (p 9) (p 9) (s 1) (s 2) (s 3) (s 8) (s 9)),
    :naki nil, :pon nil, :ti- nil, :kan nil, :ankan nil, :dora ((p 4)), :ura-dora ((s 1)),
    :tumo (s 7), :ron nil, :yaku' ((2 両立直) (1 門前清自摸和) (1 ドラ) (1 裏ドラ)),
    :hu' 30, :ten' 8000, :aux (),
    :figure (((m 5) (m 6) (m 7)) ((p 4) (p 5) (p 6)) ((s 1) (s 2) (s 3)) ((s 7) (s 8) (s 9)) ((p 9) (p 9)))})

;; FAIL: 234p西西西発発 北北北 南南南 (40 32000) (40 5200)
;; 小四喜誤検知
(def sample0209b
  '{:ba 東, :kyoku 3, :ie 南, :oya false,
    :menzen ((p 2) (p 3) (p 4) (西) (西) (西) (発)),:naki (((北) (北) (北)) ((南) (南) (南))),
    :pon (((北) (北) (北)) ((南) (南) (南))), :ti- nil, :kan nil, :ankan nil,
    :dora ((p 6)), :ura-dora nil,
    :tumo nil, :ron (発), :yaku' ((1 自風南) (2 混一色)), :hu' 40, :ten' 5200, :aux (),
    :figure (((p 2) (p 3) (p 4)) ((西) (西) (西)) ((発) (発)))})


;; オタ風喰平和fix
;; FAIL: 789m789p789s南南 123p (20 2600) (30 3900)
(def sample0209c
  '{:ba 東, :kyoku 3, :ie 北, :oya false,
    :menzen ((m 7) (m 8) (p 7) (p 8) (p 9) (s 7) (s 8) (s 9) (南) (南)),
    :naki (((p 1) (p 2) (p 3))), :pon nil, :ti- (((p 1) (p 2) (p 3))), :kan nil, :ankan nil,
    :dora ((p 8)), :ura-dora nil,
    :tumo nil, :ron (m 9),
    :yaku' ((1 三色同順) (1 混全帯幺九) (1 ドラ)),:hu' 30, :ten' 3900, :aux (),
    :figure (((m 7) (m 8) (m 9)) ((p 7) (p 8) (p 9)) ((s 7) (s 8) (s 9)) ((南) (南)))})


;; FAIL: 345p789p東東東南南 789p (30 2000) (40 2600)
(def sample0209d
  '{:ba 南, :kyoku 4, :ie 南, :oya false,
    :menzen ((p 4) (p 5) (p 7) (p 8) (p 9) (東) (東) (東) (南) (南)),
    :naki (((p 7) (p 8) (p 9))), :pon nil, :ti- (((p 7) (p 8) (p 9))), :kan nil, :ankan nil,
    :dora ((s 2)), :ura-dora nil,
    :tumo nil, :ron (p 3),
    :yaku' ((2 混一色)), :hu' 40, :ten' 2600, :aux (),
    :figure (((p 3) (p 4) (p 5)) ((p 7) (p 8) (p 9)) ((東) (東) (東)) ((南) (南)))})

;; 高点法
;; FAIL: 11p44p55p66p11s22s33s  (25 1600) (30 7700)
(def sample0209e
  '{:ba 南, :kyoku 4, :ie 南, :oya false,
    :menzen ((p 1) (p 1) (p 4) (p 4) (p 5) (p 5) (p 6) (s 1) (s 1) (s 2) (s 2) (s 3) (s 3)),
    :naki nil, :pon nil, :ti- nil, :kan nil, :ankan nil, :dora ((東)), :ura-dora nil,
    :tumo nil, :ron (p 6), :yaku' ((1 平和) (3 二盃口)), :hu' 30, :ten' 7700, :aux (),
    :figure (((p 1) (p 1)) ((p 4) (p 4)) ((p 5) (p 5)) ((p 6) (p 6)) ((s 1) (s 1)) ((s 2) (s 2)) ((s 3) (s 3)))})



;; 天鳳のアガリデータには符数と飜数が載っている。
;; 456m567p2233445s ロン5s(5m5pが赤ドラ)という形について
;; 天鳳は30符8000点、俺は40符8000点で不整合。原因は翻数だった。
;; 天鳳は30符5翻8000点、俺は40符4翻8000点と解釈していた。
;; 平和の時たまにおかしい
;; FAIL: 456m567p234s234s55s (40 8000) (30 8000)
(def sample0213b
  '{:ba 南, :kyoku 3, :ie 南, :oya false, :menzen ((m 4) (m 5) (m 6) (p 5) (p 6) (p 7) (s 2) (s 2) (s 3) (s 3) (s 4) (s 4) (s 5)), :naki nil, :pon nil, :ti- nil, :kan nil, :ankan nil, :dora ((中)), :ura-dora nil, :tumo nil, :ron (s 5), :yaku' ((1 平和) (1 一盃口) (1 断幺九) (2 赤ドラ)), :hu' 30, :ten' 8000, :aux ((2 赤ドラ))})

;; 国士は0符
;; FAIL: 1m9m1p9p1s9s東南西北北白発中 (30 32000) (0 32000)
(def sample0213a
  '{:ba 南, :kyoku 2, :ie 北, :oya false,
    :menzen ((m 9) (p 1) (p 9) (s 1) (s 9) (東) (南) (西) (北) (北) (白) (発) (中)),
    :naki nil, :pon nil, :ti- nil, :kan nil, :ankan nil,
    :dora ((s 9)), :ura-dora nil, :tumo nil, :ron (m 1), :yaku' (), :hu' 0, :ten' 32000, :aux ()})

;; 七対子で役牌がらみのバグ
;; FAIL: 11p55p22s西西白白発発中中 (25 12000) (25 6400)
(def sample0212a
  '{:ba 東, :kyoku 2, :ie 北, :oya false,
    :menzen ((p 1) (p 1) (p 5) (p 5) (s 2) (s 2) (西) (白) (白) (発) (発) (中) (中)),
    :naki nil, :pon nil, :ti- nil, :kan nil, :ankan nil, :dora ((s 1)), :ura-dora ((m 4)),
    :tumo nil, :ron (西), :yaku' ((1 立直) (2 七対子) (1 赤ドラ) (0 裏ドラ)),
    :hu' 25, :ten' 6400, :aux ((1 立直) (1 赤ドラ))})

;; ダブル役満
(def sample0216
  '{:ba 東, :kyoku 3, :ie 東, :oya true,
    :menzen ((西) (西) (北) (北)),
    :naki (((南) (南) (南)) ((発) (発) (発)) ((東) (東) (東))),
    :pon (((南) (南) (南)) ((発) (発) (発)) ((東) (東) (東))),
    :ti- nil, :kan nil, :ankan nil, :dora ((p 1)), :ura-dora nil,
    :tumo nil, :ron (西), :yaku' ((13 小四喜) (13 字一色)), :hu' 40, :ten' 96000, :aux (),
    :orig {:who "2,", :hai "116,117,118,121,122,", :fromWho "0,", :ba "0,0,", :doraHai "68,",
           :m "44106,49195,42027,", :owari " -722,-122.0,241,4.0,1280,138.0,201,-20.0,",
           :machi "117,", :ten "40,96000,5,", :sc "238,-960,241,0,320,960,201,0,", :yakuman "50,42"}
    :figure (((西) (西) (西)) ((北) (北)))})




(set `((~ba) (~ie)))
#{}リテラルで書くとエラーになる時がある


;; シャボ待ちのアガリで刻子が出来た時の符計算が間違っていた
(def sample0209
  '{:ba 南, :kyoku 2, :ie 北, :oya false, :menzen ((m 1) (m 2) (m 3) (m 7) (m 7) (北) (北)),
    :naki (((m 6) (m 6) (m 6)) ((中) (中) (中))),
    :pon (((m 6) (m 6) (m 6)) ((中) (中) (中))), :ti- nil, :kan nil, :ankan nil, :dora ((p 3)), :ura-dora nil,
    :tumo nil, :ron (m 7), :yaku' ((1 役牌中) (2 混一色)), :hu' 30, :ten' 3900, :aux ()})

これつくりたい
(aif (and ron (it-is (find-x ron (filter koutu? figure)))))



;; (def ko-point
;;   (point-table-generator
;;    ((700  1000 1300 1600 2000 2300 2600 2900 3200 3600)
;;     (1300 2000 2600 3200 3900 4500 5200 5800 6400 7100)
;;     (2600 3900 5200 6400 7700 8000 8000 8000 8000 8000)
;;     (5200 7700 8000 8000 8000 8000 8000 8000 8000 8000)
;;     8000
;;     12000 12000
;;     16000 16000 16000
;;     24000 24000
;;     32000)))

;; (def oya-point
;;   (point-table-generator
;;    ((1000 1500 2000 2400 2900 3400 3900 4400 4800 5300)
;;     (2000 2900 3900 4800 5800 6800 7700 8700 9600 10600)
;;     (3900 5800 7700 9600 11600 12000 12000 12000 12000 12000)
;;     (7700 11600 12000 12000 12000 12000 12000 12000 12000 12000)
;;     12000
;;     18000 18000
;;     24000 24000 24000
;;     36000 36000
;;     48000)))

(def ko-point
  {1 {20 700, 25 1000, 30 1000, 40 1300, 50 1600, 60 2000, 70 2300, 80 2600, 90 2900, 100 3200, 110 3600},
   2 {20 1300, 25 1600, 30 2000, 40 2600, 50 3200, 60 3900, 70 4500, 80 5200, 90 5800, 100 6400, 110 7100},
   3 {20 2600, 25 3200, 30 3900, 40 5200, 50 6400, 60 7700, 70 8000, 80 8000, 90 8000, 100 8000, 110 8000},
   4 {20 5200, 25 6400, 30 7700, 40 8000, 50 8000, 60 8000, 70 8000, 80 8000, 90 8000, 100 8000, 110 8000},
   5 {20 8000, 25 8000, 30 8000, 40 8000, 50 8000, 60 8000, 70 8000, 80 8000, 90 8000, 100 8000, 110 8000},
   6 {20 12000, 25 8000, 30 12000, 40 12000, 50 12000, 60 12000, 70 12000, 80 12000, 90 12000, 100 12000, 110 12000},
   7 {20 12000, 25 12000, 30 12000, 40 12000, 50 12000, 60 12000, 70 12000, 80 12000, 90 12000, 100 12000, 110 12000},
   8 {20 16000, 25 16000, 30 16000, 40 16000, 50 16000, 60 16000, 70 16000, 80 16000, 90 16000, 100 16000, 110 16000},
   9 {20 16000, 25 16000, 30 16000, 40 16000, 50 16000, 60 16000, 70 16000, 80 16000, 90 16000, 100 16000, 110 16000},
   10 {20 16000, 25 16000, 30 16000, 40 16000, 50 16000, 60 16000, 70 16000, 80 16000, 90 16000, 100 16000, 110 16000},
   11 {20 24000, 25 24000, 30 24000, 40 24000, 50 24000, 60 24000, 70 24000, 80 24000, 90 24000, 100 24000, 110 24000},
   12 {20 24000, 25 24000, 30 24000, 40 24000, 50 24000, 60 24000, 70 24000, 80 24000, 90 24000, 100 24000, 110 24000},
   13 {20 32000, 25 32000, 30 32000, 40 32000, 50 32000, 60 32000, 70 32000, 80 32000, 90 32000, 100 32000, 110 32000}})

(def oya-point
  {1 {20 1000, 25 1500, 30 1500, 40 2000, 50 2400, 60 2900, 70 3400, 80 3900, 90 4400, 100 4800, 110 5300},
   2 {20 2000, 25 2400, 30 2900, 40 3900, 50 4800, 60 5800, 70 6800, 80 7700, 90 8700, 100 9600, 110 10600},
   3 {20 3900, 25 4800, 30 5800, 40 7700, 50 9600, 60 11600, 70 12000, 80 12000, 90 12000, 100 12000, 110 12000},
   4 {20 7700, 25 9600, 30 11600, 40 12000, 50 12000, 60 12000, 70 12000, 80 12000, 90 12000, 100 12000, 110 12000},
   5 {20 12000, 25 12000, 30 12000, 40 12000, 50 12000, 60 12000, 70 12000, 80 12000, 90 12000, 100 12000, 110 12000},
   6 {20 18000, 25 18000, 30 18000, 40 18000, 50 18000, 60 18000, 70 18000, 80 18000, 90 18000, 100 18000, 110 18000},
   7 {20 18000, 25 18000, 30 18000, 40 18000, 50 18000, 60 18000, 70 18000, 80 18000, 90 18000, 100 18000, 110 18000},
   8 {20 24000, 25 24000, 30 24000, 40 24000, 50 24000, 60 24000, 70 24000, 80 24000, 90 24000, 100 24000, 110 24000},
   9 {20 24000, 25 24000, 30 24000, 40 24000, 50 24000, 60 24000, 70 24000, 80 24000, 90 24000, 100 24000, 110 24000},
   10 {20 24000, 25 24000, 30 24000, 40 24000, 50 24000, 60 24000, 70 24000, 80 24000, 90 24000, 100 24000, 110 24000},
   11 {20 36000, 25 36000, 30 36000, 40 36000, 50 36000, 60 36000, 70 36000, 80 36000, 90 36000, 100 36000, 110 36000},
   12 {20 36000, 25 36000, 30 36000, 40 36000, 50 36000, 60 36000, 70 36000, 80 36000, 90 36000, 100 36000, 110 36000},
   13 {20 48000, 25 48000, 30 48000, 40 48000, 50 48000, 60 48000, 70 48000, 80 48000, 90 48000, 100 48000, 110 48000}})

